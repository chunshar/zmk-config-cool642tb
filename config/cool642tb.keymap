#define ZMK_POINTING_DEFAULT_SCRL_VAL 100

#include <behaviors/rgbled_widget.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 2
#define NUM 3

&mt {
    flavor = "balanced";
    quick-tap-ms = <200>;
};

&lt {
    quick-tap-ms = <200>;
    flavor = "balanced";
};

/ {
    combos {
        compatible = "zmk,combos";

        comb1 {
            bindings = <&kp TAB>;
            key-positions = <10 11>;
        };

        comb2 {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 11>;
        };

        comb3 {
            bindings = <&kp ESC>;
            key-positions = <0 1>;
        };

        comb4 {
            bindings = <&kp DELETE>;
            key-positions = <8 9>;
        };

        comb5 {
            bindings = <&kp ENTER>;
            key-positions = <20 21>;
        };

        comb6 {
            bindings = <&kp BACKSPACE>;
            key-positions = <20 19>;
        };

        scroll {
            bindings = <&mo 2>;
            key-positions = <31 32>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        scroll_up_down: rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            label = "SCROLL_UP_DOWN";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q         &kp W         &kp E                &kp R                  &kp T                                                       &kp Y        &kp U  &kp I      &kp O       &kp P
&kp A         &kp S         &kp D                &kp F                  &kp G        &to 3             &kp ESCAPE                   &kp H        &kp J  &kp K      &kp L       &lt 4 SEMICOLON
&mt LSHIFT Z  &kp X         &kp C                &kp V                  &kp B        &kp TAB           &kp CAPS                     &kp N        &kp M  &kp COMMA  &kp PERIOD  &mt RSHFT SLASH
&kp LCTRL     &kp LEFT_WIN  &mt LEFT_ALT ESCAPE  &mt LSHIFT LANGUAGE_2  &lt 2 SPACE  &lt 5 LANGUAGE_1  &mt RIGHT_CONTROL BACKSPACE  &lt 1 ENTER                                &kp RGUI
            >;

            sensor-bindings = <&inc_dec_kp PAGE_UP PAGE_DOWN>;
        };

        num_fn_layer {
            bindings = <
&kp NUMBER_1   &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5                       &kp NUMBER_6  &kp N7         &kp N8        &kp N9       &kp N0
&kp F1         &kp F2        &kp F3        &kp F4        &kp F5   &kp C_MUTE  &trans  &kp HOME      &kp PAGE_DOWN  &kp UP_ARROW  &kp PAGE_UP  &kp F11
&mt LSHIFT F6  &kp F7        &kp F8        &kp F9        &kp F10  &trans      &trans  &kp END       &kp LEFT       &kp DOWN      &kp RIGHT    &mt RSHFT F12
&trans         &trans        &trans        &trans        &trans   &trans      &trans  &trans                                                  &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_DOWN C_VOLUME_UP>;
        };

        symbol_scroll_layer {
            bindings = <
&kp EXCLAMATION         &kp AT_SIGN  &kp HASH   &kp DOLLAR     &kp PERCENT                                  &kp CARET       &kp AMPERSAND  &kp ASTERISK      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&kp UNDERSCORE          &kp TILDE    &kp GRAVE  &kp SQT        &kp DOUBLE_QUOTES  &none   &trans            &kp PLUS        &kp MINUS      &kp LEFT_BRACKET  &kp RIGHT_BRACKET     &kp COLON
&mt LSHIFT EXCLAMATION  &kp PLUS     &kp EQUAL  &kp BACKSLASH  &kp PIPE           &trans  &kp LS(CAPSLOCK)  &kp LEFT_BRACE  &kp RBRC       &kp LESS_THAN     &kp GREATER_THAN      &mt RSHIFT QUESTION
&trans                  &trans       &trans     &trans         &trans             &trans  &trans            &trans                                                                 &trans
            >;

            sensor-bindings = <&inc_dec_kp C_BRIGHTNESS_DEC C_BRIGHTNESS_INC>;
        };

        bt_10key_layer {
            bindings = <
&bt BT_PRV     &bt BT_NXT     &none          &bt BT_CLR     &bt BT_CLR_ALL                      &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_MINUS  &kp KP_DIVIDE
&bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4    &to 0   &trans      &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_PLUS   &kp KP_ASTERISK
&bt BT_DISC 0  &bt BT_DISC 1  &bt BT_DISC 2  &bt BT_DISC 3  &bt BT_DISC 4   &trans  &trans      &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_DOT    &kp COMMA
&trans         &trans         &trans         &trans         &trans          &trans  &kp KP_NUM  &kp KP_NUMBER_0                                                  &kp KP_ENTER
            >;
        };

        auto_mouse_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans                  &trans  &mkp MB4  &mkp MB5  &trans    &trans
&trans  &trans  &trans  &trans  &trans  &none   &trans  &trans  &mkp MB1  &mkp MB2  &mkp MB3  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                                &trans
            >;

            sensor-bindings = <&inc_dec_kp PAGE_UP PAGE_DOWN>;
        };

        auxiliary {
            bindings = <
&kp ESCAPE      &none   &kp C_BRIGHTNESS_DEC  &none           &kp C_BRIGHTNESS_INC                          &kp PRINTSCREEN  &kp LG(LC(LEFT))  &kp LG(LC(D))  &kp LG(LC(RIGHT))  &kp LG(LC(F4))
&kp CAPS        &none   &kp C_VOL_DN          &kp C_MUTE      &kp C_VOLUME_UP       &kp LG(ESCAPE)  &trans  &kp HOME         &kp PAGE_UP       &kp UP         &kp PAGE_DOWN      &kp RET
&kp LEFT_SHIFT  &none   &kp LG(KP_MINUS)      &kp LG(ESCAPE)  &kp LG(KP_PLUS)       &trans          &trans  &kp END          &kp LEFT          &kp DOWN       &kp RIGHT          &kp RIGHT_SHIFT
&bootloader     &trans  &trans                &trans          &trans                &trans          &trans  &trans                                                               &bootloader
            >;

            sensor-bindings = <&inc_dec_kp LG(KP_MINUS) LG(KP_PLUS)>;
        };
    };
};
