#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        comb1 {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        comb2 {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        comb3 {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        comb4 {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        comb5 {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W         &kp E         &kp R                      &kp T                                           &kp Y        &kp U  &kp I      &kp O       &kp P
&kp A             &kp S         &kp D         &kp F                      &kp G        &to 3             &kp MINUS        &kp H        &kp J  &kp K      &kp L       &kp SEMICOLON
&mt LEFT_SHIFT Z  &kp X         &kp C         &kp V                      &kp B        &kp LEFT_ARROW    &kp RIGHT        &kp N        &kp M  &kp COMMA  &kp PERIOD  &mt RIGHT_SHIFT SLASH
&kp LEFT_CONTROL  &kp LEFT_WIN  &kp LEFT_ALT  &mt LEFT_SHIFT LANGUAGE_2  &lt 1 SPACE  &lt 2 LANGUAGE_1  &lt 2 BACKSPACE  &lt 1 ENTER                                &kp RCTRL
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        symbol_layer {
            bindings = <
&kp EXCLAMATION             &kp AT_SIGN  &kp HASH   &kp DOLLAR     &kp PERCENT                                             &kp CARET       &kp AMPERSAND  &kp ASTERISK      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&kp UNDERSCORE              &kp TILDE    &kp GRAVE  &kp SQT        &kp DOUBLE_QUOTES  &kp K_MUTE        &kp MINUS          &kp PLUS        &kp MINUS      &kp LEFT_BRACKET  &kp RIGHT_BRACKET     &kp COLON
&mt LEFT_SHIFT EXCLAMATION  &kp PLUS     &kp EQUAL  &kp BACKSLASH  &kp PIPE           &kp LC(LG(LEFT))  &kp RC(RG(RIGHT))  &kp LEFT_BRACE  &kp RBRC       &kp LESS_THAN     &kp GREATER_THAN      &mt RIGHT_SHIFT QUESTION
&trans                      &trans       &trans     &kp ESCAPE     &kp TAB            &kp DELETE        &kp LS(CAPS)       &kp TAB                                                                &trans
            >;

            sensor-bindings = <&inc_dec_kp K_VOLUME_UP K_VOLUME_DOWN>;
        };

        number_control_layer {
            bindings = <
&kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5                                             &kp NUMBER_6     &kp N7          &kp N8          &kp N9           &kp N0
&kp F1        &kp F2        &kp F3        &kp F4        &kp F5   &kp C_BRIGHTNESS_AUTO  &kp PRINTSCREEN    &kp HOME         &mkp MB1        &kp UP_ARROW    &mkp MB2         &mkp MB3
&kp F6        &kp F7        &kp F8        &kp F9        &kp F10  &kp LC(LG(LEFT))       &kp RC(RG(RIGHT))  &kp END          &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &mkp MB4
&kp F11       &kp F12       &kp F13       &kp F14       &kp F15  &trans                 &trans             &kp RIGHT_SHIFT                                                   &trans
            >;

            sensor-bindings = <&inc_dec_kp C_BRIGHTNESS_INC C_BRIGHTNESS_DEC>;
        };

        config_10key_layer {
            bindings = <
&bt BT_CLR_ALL    &none         &none         &none           &none                                  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_MINUS  &kp KP_DIVIDE
&bt BT_SEL 0      &bt BT_SEL 1  &bt BT_SEL 2  &none           &none      &to 0       &kp TAB         &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_PLUS   &kp KP_ASTERISK
&bt BT_PRV        &bt BT_NXT    &none         &none           &none      &none       &kp BACKSPACE   &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_DOT    &kp COMMA
&kp LEFT_CONTROL  &kp LEFT_WIN  &kp LEFT_ALT  &kp LEFT_SHIFT  &kp SPACE  &kp DELETE  &kp KP_NUMLOCK  &kp KP_NUMBER_0                                                  &kp KP_ENTER
            >;

            sensor-bindings = <&inc_dec_kp K_VOLUME_UP K_VOLUME_DOWN>;
        };

        auto_mouse_layer {
            bindings = <
&mkp MB5          &none         &none         &none           &none                &none  &none     &none  &none     &mkp MB5
&mkp MB3          &mkp MB2      &none         &mkp MB1        &none  &none  &none  &none  &mkp MB1  &none  &mkp MB2  &mkp MB3
&mkp MB4          &none         &none         &none           &none  &none  &none  &none  &none     &none  &none     &mkp MB4
&kp LEFT_CONTROL  &kp LEFT_WIN  &kp LEFT_ALT  &kp LEFT_SHIFT  &none  &none  &none  &none                             &kp RIGHT_CONTROL
            >;

            sensor-bindings = <&inc_dec_kp K_SCROLL_UP K_SCROLL_DOWN>;
        };
    };
};
