#define ZMK_POINTING_DEFAULT_SCRL_VAL 100

#include <behaviors/rgbled_widget.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 2
#define NUM 3

&mt {
    flavor = "balanced";
    quick-tap-ms = <200>;
};

&lt {
    quick-tap-ms = <200>;
    flavor = "balanced";
};

/ {
    combos {
        compatible = "zmk,combos";

        comb1 {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        comb2 {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        comb3 {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        comb4 {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        comb5 {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        scroll_up_down: rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            label = "SCROLL_UP_DOWN";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W         &kp E         &kp R                      &kp T                                                   &kp Y            &kp U  &kp I      &kp O       &kp P
&kp A             &kp S         &kp D         &kp F                      &kp G        &to 3             &kp DEL                  &kp H            &kp J  &kp K      &kp L       &kp SEMICOLON
&kp Z             &kp X         &kp C         &kp V                      &kp B        &kp TAB           &kp ESC                  &kp N            &kp M  &kp COMMA  &kp PERIOD  &kp SLASH
&kp LEFT_CONTROL  &kp LEFT_WIN  &kp LEFT_ALT  &mt LEFT_SHIFT LANGUAGE_2  &lt 1 SPACE  &lt 2 LANGUAGE_1  &mt RIGHT_WIN BACKSPACE  &mt RCTRL ENTER                                &kp RCTRL
            >;

            sensor-bindings = <&inc_dec_kp PAGE_UP PAGE_DOWN>;
        };

        num_fn_ctrl_layer {
            bindings = <
&kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5                            &kp NUMBER_6  &kp N7          &kp N8          &kp N9           &kp N0
&kp F1        &kp F2        &kp F3        &kp F4        &kp F5   &kp PRINTSCREEN  &trans  &kp HOME      &mkp MB1        &kp UP_ARROW    &mkp MB2         &mkp MB3
&kp F6        &kp F7        &kp F8        &kp F9        &kp F10  &trans           &trans  &kp END       &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &mkp MB4
&kp F11       &kp F12       &trans        &trans        &trans   &trans           &trans  &trans                                                         &trans
            >;
        };

        symbol_layer {
            bindings = <
&kp EXCLAMATION  &kp AT_SIGN  &kp HASH   &kp DOLLAR     &kp PERCENT                            &kp CARET       &kp AMPERSAND  &kp ASTERISK      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&kp UNDERSCORE   &kp TILDE    &kp GRAVE  &kp SQT        &kp DOUBLE_QUOTES  &kp C_MUTE  &trans  &kp PLUS        &kp MINUS      &kp LEFT_BRACKET  &kp RIGHT_BRACKET     &kp COLON
&kp EXCLAMATION  &kp PLUS     &kp EQUAL  &kp BACKSLASH  &kp PIPE           &trans      &trans  &kp LEFT_BRACE  &kp RBRC       &kp LESS_THAN     &kp GREATER_THAN      &kp QUESTION
&trans           &trans       &trans     &trans         &trans             &trans      &trans  &trans                                                                 &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_DOWN C_VOLUME_UP>;
        };

        bt_10key_layer {
            bindings = <
&bt BT_PRV     &bt BT_NXT     &none          &bt BT_CLR     &bt BT_CLR_ALL                      &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_MINUS  &kp KP_DIVIDE
&bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4    &to 0   &kp KP_NUM  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_PLUS   &kp KP_ASTERISK
&bt BT_DISC 0  &bt BT_DISC 1  &bt BT_DISC 2  &bt BT_DISC 3  &bt BT_DISC 4   &trans  &trans      &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_DOT    &kp COMMA
&trans         &trans         &trans         &trans         &trans          &trans  &trans      &kp KP_NUMBER_0                                                  &kp KP_ENTER
            >;
        };

        auto_mouse_layer {
            bindings = <
&mkp MB5  &kp W     &kp E   &kp R     &kp T                   &kp Y   &kp U     &kp I      &kp O       &mkp MB5
&mkp MB3  &mkp MB2  &kp D   &mkp MB1  &kp G   &none   &trans  &kp H   &mkp MB1  &kp K      &mkp MB2    &mkp MB3
&mkp MB4  &kp X     &kp C   &kp V     &kp B   &trans  &trans  &kp N   &kp M     &kp COMMA  &kp PERIOD  &mkp MB4
&trans    &trans    &trans  &trans    &trans  &trans  &trans  &trans                                   &trans
            >;

            sensor-bindings = <&inc_dec_kp PAGE_UP PAGE_DOWN>;
        };
    };
};
